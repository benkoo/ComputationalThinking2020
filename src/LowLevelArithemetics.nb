(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     43502,        971]
NotebookOptionsPosition[     39294,        895]
NotebookOutlinePosition[     39702,        911]
CellTagsIndexPosition[     39659,        908]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Implementing Low Level Arithmetics", "Title",
 CellChangeTimes->{{3.815881080183003*^9, 
  3.8158810862132998`*^9}},ExpressionUUID->"632dd18a-ec30-4f3d-9b73-\
81572442d4d5"],

Cell["Matching what was taught in Nand2Tetris", "Subtitle",
 CellChangeTimes->{{3.8158810957095213`*^9, 
  3.815881103212482*^9}},ExpressionUUID->"d88a3a21-30ac-49b9-a69a-\
7d83bc7d9c45"],

Cell["Enter subsubtitle here", "Subsubtitle",ExpressionUUID->"4f957fcc-aeca-4ab3-90e7-c4e1a9773c23"],

Cell["Ben Koo", "Author",
 CellChangeTimes->{{3.81588113243781*^9, 
  3.815881133221671*^9}},ExpressionUUID->"07f12503-eb2f-45dd-b089-\
c0d1de88a326"],

Cell["", "Department",
 CellChangeTimes->{{3.815881127756493*^9, 
  3.815881141069803*^9}},ExpressionUUID->"1c1fa70b-740f-4db9-9cc4-\
3730e9de4d47"],

Cell["\[OpenCurlyDoubleQuote]Wed 2 Dec 2020 15:09:16\[CloseCurlyDoubleQuote] \
in Bali", "Date",
 CellChangeTimes->{{3.815881146572566*^9, 3.815881149236533*^9}, {
  3.815881748681101*^9, 
  3.8158817708246326`*^9}},ExpressionUUID->"de074ac3-a7a6-48e6-98a2-\
627b69284adc"],

Cell[CellGroupData[{

Cell["Use only Addition operation to implement Multiplication", "Section",
 CellChangeTimes->{{3.815901596151823*^9, 
  3.8159016089509573`*^9}},ExpressionUUID->"5947a233-da0b-4ba0-ab43-\
5682f53e25dc"],

Cell["\<\
Due to the fact that Hack Computer only has hardware support for addition \
operation, all other arithmetic operations such as multiplication, division, \
and square root must be implement with high level algorithms. In the \
Nand2Tetris course, the Math class is the container of this algorithm set. \
The instructors on Coursera also explained a way to implement multiplication \
using just addition. We try to implement this algorithm in Mathematica, so \
that it can be used as a reference or pseudo code.\
\>", "Text",
 CellChangeTimes->{{3.8159016226396914`*^9, 3.815901883606394*^9}, {
  3.815901913983986*^9, 
  3.8159019213670607`*^9}},ExpressionUUID->"51bb68db-66ab-455c-8360-\
77087ca68c2f"],

Cell[CellGroupData[{

Cell["Multiplication based on Addition", "Subsection",
 CellChangeTimes->{{3.8159019277253437`*^9, 
  3.815901937396838*^9}},ExpressionUUID->"87f13791-c410-4070-ab73-\
8d3d38ab4fc9"],

Cell["\<\
The following algorithm is based on the instructions taught in the video by \
Shimon Shocken. The idea is to use the ConverToBin() algorithm already \
packaged in Nand2Tetris software package in Week 11. The equivalent algorithm \
of ConverToBIn(N) in Mathematica is called: \
\[OpenCurlyDoubleQuote]IntegerDigits[N, base, 15]\[CloseCurlyDoubleQuote], \
which returns a fix length list (15 items) of binary digits that represents \
the number N. The first thing one should notice is that Hack Computer only \
handle 15 bit numbers, using the most significant bit (MSB) to represent \
sign, so that the largest number should be 2^15 -1.\
\>", "Text",
 CellChangeTimes->{{3.8159016226396914`*^9, 3.815901883606394*^9}, {
  3.815901913983986*^9, 3.8159019213670607`*^9}, {3.815904734978202*^9, 
  3.815904927776608*^9}, {3.815905801032587*^9, 
  3.815905866512557*^9}},ExpressionUUID->"efdab36a-b43d-460c-83bd-\
830c466005d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Multiplier", "[", 
   RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", "\n", "    ", 
     RowBox[{
      RowBox[{"x0", "=", 
       RowBox[{"IntegerPart", "[", "x", "]"}]}], ",", " ", "\n", "    ", 
      RowBox[{"y0", "=", 
       RowBox[{"IntegerPart", "[", "y", "]"}]}], ",", "\n", "    ", 
      RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"j", " ", "=", " ", "0"}], ",", "\n", "    ", 
      RowBox[{"base", " ", "=", " ", "2"}], ",", "\n", "    ", 
      RowBox[{"result", " ", "=", " ", "0"}], ",", "\n", "    ", 
      RowBox[{"LARGESTNUM", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "^", "15"}], ")"}], " ", "-", "1"}]}], ",", "\n", 
      "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "*", " ", "First", " ", "create", " ", "a", " ", "list", " ", "of", 
          " ", "multipliers", " ", "mul"}], " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"2", "^", "i"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "0", ",", " ", "15"}], "}"}]}], "]"}]}], 
        ";"}], " ", "**)"}], "\n", "    ", 
      RowBox[{"twoTothe", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64", 
         ",", "128", ",", "256", ",", "512", ",", "1024", ",", "2048", ",", 
         "4096", ",", "8192", ",", "16384", ",", "32768"}], "}"}]}], ",", 
      "\n", "    ", 
      RowBox[{"yDigits", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "\n", "    ", 
      RowBox[{"digitCount", "  ", "=", " ", "0"}]}], "\n", "  ", "}"}], ",", 
    "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"Multiplier", "::", "inputError"}], " ", "=", " ", 
      "\"\<Argument `` is not a number, function aborted.\>\""}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Multiplier", "::", "error"}], " ", "=", " ", 
      "\"\<Argument `` is not an Integer, try to conver to Integer \
automatically.\>\""}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Multiplier", "::", "outOfBounds"}], " ", "=", " ", 
      "\"\<Argument `` is more than 32767, this algorithm cannot handle this \
input.\>\""}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"NumberQ", "[", "x", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Multiplier", "::", "inputError"}], " ", ",", " ", "1"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"NumberQ", "[", "y", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Multiplier", "::", "inputError"}], " ", ",", " ", "2"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"IntegerQ", "[", "x", "]"}]}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Multiplier", "::", "error"}], " ", ",", " ", "1"}], "]"}]}],
       "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"IntegerQ", "[", "y", "]"}]}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Multiplier", "::", "error"}], " ", ",", " ", "2"}], "]"}]}],
       "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x0", " ", ">", " ", "LARGESTNUM"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Multiplier", "::", "outOfBounds"}], " ", ",", " ", "1"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y0", " ", ">", " ", "LARGESTNUM"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Multiplier", "::", "outOfBounds"}], " ", ",", " ", "2"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "    ", "\n", "  ", 
     RowBox[{"base", " ", "=", " ", "2"}], ";", "\n", "  ", 
     RowBox[{"result", " ", "=", " ", "0"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"yDigits", " ", "=", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"y0", ",", "base", ",", "15"}], "]"}]}], ";", "\n", "  ", 
     RowBox[{"digitCount", " ", "=", " ", 
      RowBox[{"Length", "[", "yDigits", "]"}]}], ";", "\n", "  ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "digitCount"}], ",", " ", 
       RowBox[{"i", ">", "0"}], ",", " ", 
       RowBox[{"i", "--"}], ",", " ", "\n", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<i=\>\"", ",", " ", "i", ",", " ", "\"\< twoTothe=\>\"", ",", 
           " ", 
           RowBox[{"twoTothe", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", "\"\< yDigits=\>\"", 
           ",", " ", 
           RowBox[{"yDigits", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}], ";"}], " ", "*)"}], 
       "\n", "      ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"yDigits", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "\[Equal]", " ", "1"}], ",", 
          "\n", "          ", 
          RowBox[{"result", " ", "=", " ", 
           RowBox[{"result", " ", "+", " ", 
            RowBox[{"x0", " ", "*", " ", 
             RowBox[{"twoTothe", "\[LeftDoubleBracket]", 
              RowBox[{"16", "-", "i"}], "\[RightDoubleBracket]"}]}]}]}]}], 
         "]"}], ";"}]}], "\n", "  ", "]"}], ";", "\n", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "This", " ", "is", " ", "where", " ", "we", " ", "check", " ", "the", 
       " ", "sign", " ", "of", " ", "the", " ", 
       RowBox[{"denominator", "."}]}], "*)"}], "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y0", " ", "<", " ", "0"}], ",", " ", 
       RowBox[{"-", " ", "result"}], ",", " ", "result"}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.815881254255261*^9, 3.815881265955984*^9}, {
   3.8158815474908333`*^9, 3.815881628257471*^9}, {3.8158816672258463`*^9, 
   3.815881670273538*^9}, {3.8158819645617113`*^9, 3.815882046759254*^9}, {
   3.815882088871564*^9, 3.8158821779524193`*^9}, {3.8158822946020393`*^9, 
   3.815882299957762*^9}, {3.815882334974663*^9, 3.815882398219462*^9}, 
   3.815882440613168*^9, {3.8158824855891323`*^9, 3.8158825179671926`*^9}, {
   3.815882564797247*^9, 3.8158825859572897`*^9}, {3.815882771677701*^9, 
   3.815882782322381*^9}, {3.815882819081799*^9, 3.815882836167795*^9}, {
   3.815882911450326*^9, 3.815882931080554*^9}, {3.8158831596233177`*^9, 
   3.815883172990778*^9}, {3.8158832035757637`*^9, 3.815883277989403*^9}, {
   3.815883320245907*^9, 3.815883338878089*^9}, {3.815883562635804*^9, 
   3.815883600338274*^9}, {3.815883647315632*^9, 3.815883731466641*^9}, {
   3.815883842227137*^9, 3.8158840366321487`*^9}, {3.815884085816577*^9, 
   3.815884090966337*^9}, {3.815884141913571*^9, 3.815884150442284*^9}, {
   3.815884208463909*^9, 3.81588423222536*^9}, {3.8158845440282288`*^9, 
   3.81588468191397*^9}, {3.815884718587552*^9, 3.815884782848359*^9}, {
   3.815884841482376*^9, 3.8158849156316013`*^9}, {3.8158849486004667`*^9, 
   3.815885042702882*^9}, {3.815885077618369*^9, 3.815885130173265*^9}, {
   3.8158852063856*^9, 3.815885235726501*^9}, {3.8158853620614147`*^9, 
   3.815885368444584*^9}, {3.8158854367335777`*^9, 3.815885573122231*^9}, {
   3.8158858182578707`*^9, 3.815885818959858*^9}, {3.815885909121428*^9, 
   3.815885918974853*^9}, {3.815885973403685*^9, 3.815885977247616*^9}, {
   3.8158861531520967`*^9, 3.815886158613027*^9}, {3.815887362987994*^9, 
   3.815887465655963*^9}, {3.815887544928524*^9, 3.8158875475204773`*^9}, {
   3.815887603184688*^9, 3.815887615295042*^9}, {3.815888316974277*^9, 
   3.815888325306088*^9}, {3.815888410251422*^9, 3.815888412257937*^9}, {
   3.8159056325004063`*^9, 3.81590567473293*^9}, {3.8159059717852793`*^9, 
   3.815906019887813*^9}, {3.8160635524605627`*^9, 3.816063567076782*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"99a3cc38-c75b-47d4-90fd-8fbc270f03a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Multiplier", "[", 
  RowBox[{
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "7"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.815887551694586*^9, 3.815887570215549*^9}, {
  3.8158876480630074`*^9, 3.8158876483408413`*^9}, {3.815888230988614*^9, 
  3.81588824023604*^9}, {3.815888330026835*^9, 3.815888332744897*^9}, {
  3.81590154264991*^9, 3.815901542727504*^9}, {3.815905682314714*^9, 
  3.81590570283315*^9}, {3.815905896850369*^9, 3.815905913751267*^9}, {
  3.8159059966564302`*^9, 3.815906028535674*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"19a77ccb-36f2-437e-a42e-a6be98d82aae"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{
  3.815905703206143*^9, {3.815905897211687*^9, 3.815905914276767*^9}, {
   3.815905994085681*^9, 3.815906029286269*^9}, 3.816058492329678*^9, 
   3.8160635708788843`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"17767038-aeb2-4199-8363-d399b8bea0b7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"On", "[", "Assert", "]"}]], "Input",
 CellChangeTimes->{{3.815888487384493*^9, 3.815888488280066*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"67a7aace-e504-45e6-8aa8-3fae9ca1b9d1"],

Cell["Let\[CloseCurlyQuote]s try the function Multiplier", "Text",
 CellChangeTimes->{{3.815882198821113*^9, 
  3.81588220590862*^9}},ExpressionUUID->"c59ed43a-abd3-4d92-b810-\
3ecd16e6ebb4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxCount", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", " ", 
    RowBox[{"i", " ", "<", " ", "maxCount"}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", " ", "=", "0"}], ",", " ", 
      RowBox[{"j", " ", "<", " ", "maxCount"}], ",", " ", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"output", "=", 
        RowBox[{
         RowBox[{"Multiplier", "[", 
          RowBox[{"i", ",", "j"}], "]"}], " ", "-", " ", 
         RowBox[{"(", 
          RowBox[{"i", " ", "*", " ", "j"}], ")"}]}]}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<output = \>\"", ",", " ", "output"}], "]"}], ";"}], " ", 
      "*)"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.815887744581394*^9, 3.8158878317955017`*^9}, {
   3.8158879159417*^9, 3.8158879257812653`*^9}, {3.815887994077516*^9, 
   3.815888010782023*^9}, {3.8158880447500362`*^9, 3.815888072732749*^9}, {
   3.815888420866065*^9, 3.815888436786066*^9}, {3.815888469122156*^9, 
   3.81588847145658*^9}, {3.815888512601284*^9, 3.8158885198102913`*^9}, 
   3.8158886083053303`*^9, {3.8159049864591923`*^9, 3.8159052114715242`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"6e38e186-bfa8-4b42-9e23-0972e9bad5c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000539`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.815888005604385*^9, 3.815888073036729*^9}, {
   3.815888422863413*^9, 3.8158885232213507`*^9}, 3.815888611562106*^9, {
   3.8159049907293863`*^9, 3.81590500849537*^9}, 3.815905041805236*^9, {
   3.815905094826313*^9, 3.815905211927196*^9}, 3.816058502877548*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"d3f020ff-b384-4aeb-91c0-8aa012d2a837"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Off", "[", "Assert", "]"}]], "Input",
 CellChangeTimes->{{3.815887822908584*^9, 3.8158878254756813`*^9}, {
  3.815888475041873*^9, 3.815888476745585*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"00af1c2e-1f9e-442c-8429-984ceb64d6a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Division based on Addition", "Subsection",
 CellChangeTimes->{{3.8159019277253437`*^9, 
  3.815901952613206*^9}},ExpressionUUID->"7e6943d2-09a0-45b1-8898-\
90a498c49483"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Division", "[", 
   RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", "\n", "    ", 
     RowBox[{
      RowBox[{"x0", "=", 
       RowBox[{"IntegerPart", "[", "x", "]"}]}], ",", " ", "\n", "    ", 
      RowBox[{"y0", "=", 
       RowBox[{"IntegerPart", "[", "y", "]"}]}], ",", "\n", "    ", 
      RowBox[{"q", " ", "=", " ", "0"}], ",", "\n", "    ", 
      RowBox[{"LARGESTNUM", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "^", "15"}], ")"}], " ", "-", "1"}]}]}], "\n", 
     "  ", "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"Division", "::", "inputError"}], " ", "=", " ", 
      "\"\<Argument `` is not a number, function aborted.\>\""}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"Division", "::", "error"}], " ", "=", " ", 
      "\"\<Argument `` is not an Integer, try to conver to Integer \
automatically.\>\""}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Division", "::", "outOfBounds"}], " ", "=", " ", 
      "\"\<Argument `` is more than 32767, this algorithm cannot handle this \
input.\>\""}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"NumberQ", "[", "x", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Division", "::", "inputError"}], " ", ",", " ", "1"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"NumberQ", "[", "y", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Division", "::", "inputError"}], " ", ",", " ", "2"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"IntegerQ", "[", "x", "]"}]}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Division", "::", "error"}], " ", ",", " ", "1"}], "]"}]}], 
      "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"IntegerQ", "[", "y", "]"}]}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Division", "::", "error"}], " ", ",", " ", "2"}], "]"}]}], 
      "]"}], ";", "\n", "  ", 
     RowBox[{"x0", " ", "=", " ", 
      RowBox[{"Abs", "[", "x0", "]"}]}], ";", "\n", "  ", 
     RowBox[{"y0", " ", "=", " ", 
      RowBox[{"Abs", "[", "y0", "]"}]}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x0", " ", ">", " ", "LARGESTNUM"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Division", "::", "outOfBounds"}], " ", ",", " ", "1"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y0", " ", ">", " ", "LARGESTNUM"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Division", "::", "outOfBounds"}], " ", ",", " ", "2"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"y0", " ", ">", " ", "x0"}], ",", " ", 
       RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"q", " ", "=", " ", 
      RowBox[{"DivisionNewton", "[", 
       RowBox[{"x0", ",", " ", 
        RowBox[{"2", " ", "*", " ", "y0"}]}], "]"}]}], ";", "\n", "  ", "\n", 
     "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x0", " ", "-", " ", 
         RowBox[{"2", " ", "*", " ", "q", " ", "*", " ", "y0"}]}], " ", "<", 
        " ", "y0"}], ",", " ", "\[IndentingNewLine]", "\t", 
       RowBox[{"q", " ", "=", " ", 
        RowBox[{"2", " ", "*", " ", "q"}]}], ",", "\n", "    ", 
       RowBox[{"q", " ", "=", " ", 
        RowBox[{
         RowBox[{"2", " ", "*", " ", "q"}], " ", "+", " ", "1"}]}]}], "\n", 
      "  ", "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{"x", " ", "<", " ", "0"}], ",", " ", 
           RowBox[{"y", " ", ">", " ", "0"}]}], "]"}], ",", " ", 
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{"x", " ", ">", " ", "0"}], ",", " ", 
           RowBox[{"y", " ", "<", " ", "0"}]}], "]"}]}], "]"}], ",", "\n", 
       "    ", 
       RowBox[{"Return", "[", 
        RowBox[{"-", "q"}], "]"}], ",", "\n", "    ", 
       RowBox[{"Return", "[", "q", "]"}]}], "\n", "  ", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.815881254255261*^9, 3.815881265955984*^9}, {
   3.8158815474908333`*^9, 3.815881628257471*^9}, {3.8158816672258463`*^9, 
   3.815881670273538*^9}, {3.8158819645617113`*^9, 3.815882046759254*^9}, {
   3.815882088871564*^9, 3.8158821779524193`*^9}, {3.8158822946020393`*^9, 
   3.815882299957762*^9}, {3.815882334974663*^9, 3.815882398219462*^9}, 
   3.815882440613168*^9, {3.8158824855891323`*^9, 3.8158825179671926`*^9}, {
   3.815882564797247*^9, 3.8158825859572897`*^9}, {3.815882771677701*^9, 
   3.815882782322381*^9}, {3.815882819081799*^9, 3.815882836167795*^9}, {
   3.815882911450326*^9, 3.815882931080554*^9}, {3.8158831596233177`*^9, 
   3.815883172990778*^9}, {3.8158832035757637`*^9, 3.815883277989403*^9}, {
   3.815883320245907*^9, 3.815883338878089*^9}, {3.815883562635804*^9, 
   3.815883600338274*^9}, {3.815883647315632*^9, 3.815883731466641*^9}, {
   3.815883842227137*^9, 3.8158840366321487`*^9}, {3.815884085816577*^9, 
   3.815884090966337*^9}, {3.815884141913571*^9, 3.815884150442284*^9}, {
   3.815884208463909*^9, 3.81588423222536*^9}, {3.8158845440282288`*^9, 
   3.81588468191397*^9}, {3.815884718587552*^9, 3.815884782848359*^9}, {
   3.815884841482376*^9, 3.8158849156316013`*^9}, {3.8158849486004667`*^9, 
   3.815885042702882*^9}, {3.815885077618369*^9, 3.815885130173265*^9}, {
   3.8158852063856*^9, 3.815885235726501*^9}, {3.8158853620614147`*^9, 
   3.815885368444584*^9}, {3.8158854367335777`*^9, 3.815885573122231*^9}, {
   3.8158858182578707`*^9, 3.815885818959858*^9}, {3.815885909121428*^9, 
   3.815885918974853*^9}, {3.815885973403685*^9, 3.815885977247616*^9}, {
   3.8158861531520967`*^9, 3.815886158613027*^9}, {3.815887362987994*^9, 
   3.815887465655963*^9}, {3.815887544928524*^9, 3.8158875475204773`*^9}, {
   3.815887603184688*^9, 3.815887615295042*^9}, {3.815888316974277*^9, 
   3.815888325306088*^9}, {3.815888410251422*^9, 3.815888412257937*^9}, {
   3.815904659313458*^9, 3.815904660125741*^9}, {3.8159053688794613`*^9, 
   3.815905427006194*^9}, {3.815905580436597*^9, 3.815905621205573*^9}, {
   3.8160585639019947`*^9, 3.816058602696941*^9}, {3.816058656473853*^9, 
   3.8160586772751904`*^9}, {3.816058949407898*^9, 3.816059080979423*^9}, {
   3.816059143004464*^9, 3.816059147763131*^9}, {3.816059244895533*^9, 
   3.816059282177595*^9}, {3.8160598263058567`*^9, 3.816059852029512*^9}, 
   3.8160600386613483`*^9, {3.816060139836012*^9, 3.8160602310743628`*^9}, {
   3.816060265638239*^9, 3.816060272109104*^9}, {3.816060314539407*^9, 
   3.816060334772173*^9}, {3.8160604356982327`*^9, 3.816060528368498*^9}, {
   3.816060615913713*^9, 3.816060679128476*^9}, {3.816060759327889*^9, 
   3.816060854829686*^9}, {3.816061056334118*^9, 3.816061087605639*^9}, {
   3.816061159884251*^9, 3.816061161180437*^9}, {3.8160615918024063`*^9, 
   3.816061610593554*^9}, 3.816061641329133*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"06150ce4-6bac-48e1-ab4d-6f94a2741c61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Division", "[", 
  RowBox[{"343", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.815887551694586*^9, 3.815887570215549*^9}, {
  3.8158876480630074`*^9, 3.8158876483408413`*^9}, {3.815888230988614*^9, 
  3.81588824023604*^9}, {3.815888330026835*^9, 3.815888332744897*^9}, {
  3.81590154264991*^9, 3.815901542727504*^9}, {3.8159052312326193`*^9, 
  3.8159052319985237`*^9}, {3.816059856702425*^9, 3.8160599193235598`*^9}, {
  3.8160602404762297`*^9, 3.816060242681612*^9}, {3.816060280330776*^9, 
  3.816060280489094*^9}, {3.81606034107444*^9, 3.816060353434203*^9}, {
  3.8160605367849007`*^9, 3.816060541847377*^9}, {3.816060660008287*^9, 
  3.816060686343223*^9}, {3.816060768494485*^9, 3.8160607815582333`*^9}, {
  3.8160608605258217`*^9, 3.816060862292205*^9}, {3.816061068732399*^9, 
  3.8160610978840103`*^9}, {3.8160616175757933`*^9, 3.816061633774413*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"1544a336-5163-4be2-ba1e-60ecb4478e2e"],

Cell[BoxData["85"], "Output",
 CellChangeTimes->{{3.815887556514526*^9, 3.815887570511224*^9}, 
   3.8158876184499283`*^9, 3.815887648899049*^9, {3.8158882338502607`*^9, 
   3.815888240760631*^9}, {3.815888328085844*^9, 3.815888333228737*^9}, 
   3.8158884157268057`*^9, {3.815901540563695*^9, 3.81590154357204*^9}, 
   3.8160586138792143`*^9, {3.816058664318413*^9, 3.816058679733612*^9}, 
   3.816059150618222*^9, {3.816059858320882*^9, 3.816059920460122*^9}, 
   3.816060242978306*^9, {3.816060276487596*^9, 3.8160602825194807`*^9}, {
   3.816060326313828*^9, 3.816060353779834*^9}, 3.8160604911826553`*^9, {
   3.8160605312135468`*^9, 3.816060542097134*^9}, {3.816060657610736*^9, 
   3.816060687041603*^9}, {3.8160607631560383`*^9, 3.816060862644662*^9}, {
   3.816061066006362*^9, 3.816061098229457*^9}, {3.8160616132384167`*^9, 
   3.8160616340696898`*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"3dcd46d6-8b26-4da4-8a33-c2b95a99a7d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Division", "[", 
   RowBox[{"343", ",", "4"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.816059100602613*^9, 3.8160591075717688`*^9}, {
  3.81605915612328*^9, 3.816059193946838*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"796dfc95-468a-42f5-b4c0-8e6d1a751de0"],

Cell[BoxData["85"], "Output",
 CellChangeTimes->{{3.816059102905839*^9, 3.816059107968504*^9}, {
   3.816059152872909*^9, 3.816059194273654*^9}, {3.816059253851939*^9, 
   3.816059260211671*^9}, 3.816059306749318*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"6d5254bf-c905-4d52-a134-2d0fdae45447"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"343", " ", "/", "4.0"}]], "Input",
 CellChangeTimes->{{3.8160592066908903`*^9, 3.816059209153317*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"06c8a61f-1653-4270-b1d6-6c5a6c1c230d"],

Cell[BoxData["85.75`"], "Output",
 CellChangeTimes->{3.816059209441989*^9, 3.816059262245319*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"2a9c4f64-4781-4c77-b962-94564c93f8be"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SquareRoot based on Addition", "Subsection",
 CellChangeTimes->{{3.8159019277253437`*^9, 
  3.815901967308572*^9}},ExpressionUUID->"2096c1a0-f880-4564-92ab-\
5cbb946dbabd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SquareRoot", "[", "x_", "]"}], " ", ":=", " ", "\n", 
  RowBox[{"Module", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"{", "\n", "    ", 
     RowBox[{
      RowBox[{"x0", "=", 
       RowBox[{"IntegerPart", "[", "x", "]"}]}], ",", " ", "\n", "    ", 
      RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
      RowBox[{"j", " ", "=", " ", "0"}], ",", "\n", "    ", 
      RowBox[{"base", " ", "=", " ", "2"}], ",", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "*", " ", "First", " ", "create", " ", "a", " ", "list", " ", "of", 
          " ", "multipliers", " ", "mul"}], " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"2", "^", "i"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "0", ",", " ", "15"}], "}"}]}], "]"}]}], 
        ";"}], " ", "**)"}], "\n", "    ", 
      RowBox[{"twoTothe", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "2", ",", "4", ",", "8", ",", "16", ",", "32", ",", "64", 
         ",", "128", ",", "256", ",", "512", ",", "1024", ",", "2048", ",", 
         "4096", ",", "8192", ",", "16384", ",", "32768"}], "}"}]}], ",", 
      "\n", "    ", 
      RowBox[{"digitCount", "  ", "=", " ", "0"}], ",", "\n", "    ", 
      RowBox[{"q", " ", "=", " ", "0"}]}], "\n", "  ", "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"SquareRoot", "::", "inputNegError"}], " ", "=", " ", 
      "\"\<Argument `` is less than zero, function aborted.\>\""}], ";", "\n",
      "  ", 
     RowBox[{
      RowBox[{"SquareRoot", "::", "inputError"}], " ", "=", " ", 
      "\"\<Argument `` is not a number, function aborted.\>\""}], ";", "\n", 
     "  ", 
     RowBox[{
      RowBox[{"SquareRoot", "::", "error"}], " ", "=", " ", 
      "\"\<Argument `` is not an Integer, try to conver to Integer \
automatically.\>\""}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"SquareRoot", "::", "outOfBounds"}], " ", "=", " ", 
      "\"\<Argument `` is more than 32767, this algorithm cannot handle this \
input.\>\""}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x", " ", "<", " ", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"SquareRoot", "::", "inputNegError"}], " ", ",", " ", "1"}],
          "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"NumberQ", "[", "x", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"SquareRoot", "::", "inputError"}], " ", ",", " ", "1"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", " ", 
        RowBox[{"IntegerQ", "[", "x", "]"}]}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"SquareRoot", "::", "error"}], " ", ",", " ", "1"}], "]"}]}],
       "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x0", " ", ">", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", " ", "^", " ", "15"}], ")"}], " ", "-", "1"}]}], ",", 
       " ", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"SquareRoot", "::", "outOfBounds"}], " ", ",", " ", "1"}], 
         "]"}], ";", " ", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\n", "\n", "  ", 
     RowBox[{"digitCount", " ", "=", " ", "15"}], ";", "\n", "  ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", 
        RowBox[{"digitCount", " ", "-", " ", "1"}]}], ",", " ", 
       RowBox[{"i", " ", ">", " ", "0"}], ",", " ", 
       RowBox[{"i", "--"}], ",", " ", "\n", "      ", 
       RowBox[{
        RowBox[{"If", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"q", " ", "+", " ", 
              RowBox[{
              "twoTothe", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], ")"}], " ", "*", " ", 
            RowBox[{"(", 
             RowBox[{"q", " ", "+", " ", 
              RowBox[{
              "twoTothe", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}]}], ")"}]}], " ", "\[LessEqual]", " ",
            "x0"}], ",", "\n", "          ", 
          RowBox[{"q", " ", "=", " ", 
           RowBox[{"q", " ", "+", " ", 
            RowBox[{
            "twoTothe", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}]}]}]}], "]"}], ";"}]}], "\n", "  ", 
      "]"}], ";", "\n", "  ", 
     RowBox[{"Return", "[", "q", "]"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.815881254255261*^9, 3.815881265955984*^9}, {
   3.8158815474908333`*^9, 3.815881628257471*^9}, {3.8158816672258463`*^9, 
   3.815881670273538*^9}, {3.8158819645617113`*^9, 3.815882046759254*^9}, {
   3.815882088871564*^9, 3.8158821779524193`*^9}, {3.8158822946020393`*^9, 
   3.815882299957762*^9}, {3.815882334974663*^9, 3.815882398219462*^9}, 
   3.815882440613168*^9, {3.8158824855891323`*^9, 3.8158825179671926`*^9}, {
   3.815882564797247*^9, 3.8158825859572897`*^9}, {3.815882771677701*^9, 
   3.815882782322381*^9}, {3.815882819081799*^9, 3.815882836167795*^9}, {
   3.815882911450326*^9, 3.815882931080554*^9}, {3.8158831596233177`*^9, 
   3.815883172990778*^9}, {3.8158832035757637`*^9, 3.815883277989403*^9}, {
   3.815883320245907*^9, 3.815883338878089*^9}, {3.815883562635804*^9, 
   3.815883600338274*^9}, {3.815883647315632*^9, 3.815883731466641*^9}, {
   3.815883842227137*^9, 3.8158840366321487`*^9}, {3.815884085816577*^9, 
   3.815884090966337*^9}, {3.815884141913571*^9, 3.815884150442284*^9}, {
   3.815884208463909*^9, 3.81588423222536*^9}, {3.8158845440282288`*^9, 
   3.81588468191397*^9}, {3.815884718587552*^9, 3.815884782848359*^9}, {
   3.815884841482376*^9, 3.8158849156316013`*^9}, {3.8158849486004667`*^9, 
   3.815885042702882*^9}, {3.815885077618369*^9, 3.815885130173265*^9}, {
   3.8158852063856*^9, 3.815885235726501*^9}, {3.8158853620614147`*^9, 
   3.815885368444584*^9}, {3.8158854367335777`*^9, 3.815885573122231*^9}, {
   3.8158858182578707`*^9, 3.815885818959858*^9}, {3.815885909121428*^9, 
   3.815885918974853*^9}, {3.815885973403685*^9, 3.815885977247616*^9}, {
   3.8158861531520967`*^9, 3.815886158613027*^9}, {3.815887362987994*^9, 
   3.815887465655963*^9}, {3.815887544928524*^9, 3.8158875475204773`*^9}, {
   3.815887603184688*^9, 3.815887615295042*^9}, {3.815888316974277*^9, 
   3.815888325306088*^9}, {3.815888410251422*^9, 3.815888412257937*^9}, {
   3.81606171644108*^9, 3.8160617262873096`*^9}, {3.8160617643043137`*^9, 
   3.8160619068407717`*^9}, {3.8160620133437653`*^9, 3.816062023884851*^9}, {
   3.816062054045692*^9, 3.816062065932646*^9}, {3.816062157323997*^9, 
   3.816062376890394*^9}, {3.816062422930697*^9, 3.816062460345812*^9}, {
   3.8160624998997107`*^9, 3.816062504777689*^9}, {3.816062592748416*^9, 
   3.816062608721352*^9}, {3.816062672082274*^9, 3.816062675377798*^9}, {
   3.816062710953916*^9, 3.8160627716655807`*^9}, {3.816063521686296*^9, 
   3.8160635333565817`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"81b3e613-0185-45a7-9e39-7dcc60c32881"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SquareRoot", "[", "25", "]"}]], "Input",
 CellChangeTimes->{{3.815887551694586*^9, 3.815887570215549*^9}, {
   3.8158876480630074`*^9, 3.8158876483408413`*^9}, {3.815888230988614*^9, 
   3.81588824023604*^9}, {3.815888330026835*^9, 3.815888332744897*^9}, {
   3.81590154264991*^9, 3.815901542727504*^9}, {3.816062398236128*^9, 
   3.816062401842033*^9}, {3.816062510993952*^9, 3.8160625392317677`*^9}, {
   3.81606258128967*^9, 3.8160626239875507`*^9}, {3.816062684840576*^9, 
   3.81606269374298*^9}, {3.8160627264807587`*^9, 3.816062740478549*^9}, {
   3.816062778015794*^9, 3.81606278276663*^9}, 3.8160628168955317`*^9, 
   3.816063543538784*^9},
 CellLabel->
  "In[190]:=",ExpressionUUID->"798b76db-18e6-4e98-8408-734bc935e713"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.815887556514526*^9, 3.815887570511224*^9}, 
   3.8158876184499283`*^9, 3.815887648899049*^9, {3.8158882338502607`*^9, 
   3.815888240760631*^9}, {3.815888328085844*^9, 3.815888333228737*^9}, 
   3.8158884157268057`*^9, {3.815901540563695*^9, 3.81590154357204*^9}, 
   3.8160624021426*^9, 3.8160624668542757`*^9, {3.8160625080288677`*^9, 
   3.816062624530816*^9}, {3.816062681663056*^9, 3.8160627409547157`*^9}, {
   3.816062775526761*^9, 3.816062783118167*^9}, 3.816062817311556*^9, {
   3.816063539611618*^9, 3.816063543934265*^9}},
 CellLabel->
  "Out[190]=",ExpressionUUID->"e5a366d3-3d76-4f5f-b0d0-621d07cd3e57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "100.", "]"}]], "Input",
 CellChangeTimes->{{3.816062520929366*^9, 3.8160626284790583`*^9}, {
  3.81606268756859*^9, 3.816062696456214*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"665a0b5f-fdf0-40bf-b7e3-e83a4481d6ae"],

Cell[BoxData["10.`"], "Output",
 CellChangeTimes->{{3.816062525432563*^9, 3.816062628977635*^9}, {
  3.816062688177526*^9, 3.816062696784333*^9}},
 CellLabel->
  "Out[174]=",ExpressionUUID->"8d1ef60e-26a6-4d62-85bf-bfc2f32c82d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"On", "[", "Assert", "]"}]], "Input",
 CellChangeTimes->{{3.815888487384493*^9, 3.815888488280066*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"53fc5f03-9dec-4edb-a1e1-346946bcc9bd"],

Cell["Let\[CloseCurlyQuote]s try the function Multiplier", "Text",
 CellChangeTimes->{{3.815882198821113*^9, 
  3.81588220590862*^9}},ExpressionUUID->"a9f223db-c44f-48da-a3ba-\
6fbaa20ed913"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxCount", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", " ", 
    RowBox[{"i", " ", "<", " ", "maxCount"}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", " ", "=", "0"}], ",", " ", 
      RowBox[{"j", " ", "<", " ", "maxCount"}], ",", " ", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"VerificationTest", "[", 
        RowBox[{
         RowBox[{"Multiplier", "[", 
          RowBox[{"i", ",", "j"}], "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"i", " ", "*", " ", "j"}], "+", "1"}]}], "]"}], ";", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"Assert", "[", 
        RowBox[{
         RowBox[{"Multiplier", "[", 
          RowBox[{"i", ",", "j"}], "]"}], " ", "\[Equal]", " ", 
         RowBox[{
          RowBox[{"i", " ", "*", " ", "j"}], "+", "1"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.815887744581394*^9, 3.8158878317955017`*^9}, {
   3.8158879159417*^9, 3.8158879257812653`*^9}, {3.815887994077516*^9, 
   3.815888010782023*^9}, {3.8158880447500362`*^9, 3.815888072732749*^9}, {
   3.815888420866065*^9, 3.815888436786066*^9}, {3.815888469122156*^9, 
   3.81588847145658*^9}, {3.815888512601284*^9, 3.8158885198102913`*^9}, 
   3.8158886083053303`*^9},
 CellLabel->"In[84]:=",ExpressionUUID->"e44997dc-849e-44e1-838f-29b66c4ac62e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.041845`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.815888005604385*^9, 3.815888073036729*^9}, {
   3.815888422863413*^9, 3.8158885232213507`*^9}, 3.815888611562106*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"c1f5f9da-33e4-4fc1-bfa6-944b5614cfed"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Off", "[", "Assert", "]"}]], "Input",
 CellChangeTimes->{{3.815887822908584*^9, 3.8158878254756813`*^9}, {
  3.815888475041873*^9, 3.815888476745585*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"52275b5f-f634-41af-80aa-da7bb14afdb2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{978, 911},
WindowMargins->{{Automatic, 345}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 97, "Title",ExpressionUUID->"632dd18a-ec30-4f3d-9b73-81572442d4d5"],
Cell[762, 27, 187, 3, 33, "Subtitle",ExpressionUUID->"d88a3a21-30ac-49b9-a69a-7d83bc7d9c45"],
Cell[952, 32, 100, 0, 31, "Subsubtitle",ExpressionUUID->"4f957fcc-aeca-4ab3-90e7-c4e1a9773c23"],
Cell[1055, 34, 150, 3, 40, "Author",ExpressionUUID->"07f12503-eb2f-45dd-b089-c0d1de88a326"],
Cell[1208, 39, 148, 3, 16, "Department",ExpressionUUID->"1c1fa70b-740f-4db9-9cc4-3730e9de4d47"],
Cell[1359, 44, 273, 5, 42, "Date",ExpressionUUID->"de074ac3-a7a6-48e6-98a2-627b69284adc"],
Cell[CellGroupData[{
Cell[1657, 53, 202, 3, 69, "Section",ExpressionUUID->"5947a233-da0b-4ba0-ab43-5682f53e25dc"],
Cell[1862, 58, 712, 12, 103, "Text",ExpressionUUID->"51bb68db-66ab-455c-8360-77087ca68c2f"],
Cell[CellGroupData[{
Cell[2599, 74, 182, 3, 34, "Subsection",ExpressionUUID->"87f13791-c410-4070-ab73-8d3d38ab4fc9"],
Cell[2784, 79, 933, 15, 126, "Text",ExpressionUUID->"efdab36a-b43d-460c-83bd-830c466005d2"],
Cell[3720, 96, 8532, 187, 770, "Code",ExpressionUUID->"99a3cc38-c75b-47d4-90fd-8fbc270f03a2"],
Cell[CellGroupData[{
Cell[12277, 287, 613, 12, 41, "Input",ExpressionUUID->"19a77ccb-36f2-437e-a42e-a6be98d82aae"],
Cell[12893, 301, 303, 6, 41, "Output",ExpressionUUID->"17767038-aeb2-4199-8363-d399b8bea0b7"]
}, Open  ]],
Cell[13211, 310, 209, 4, 41, "Input",ExpressionUUID->"67a7aace-e504-45e6-8aa8-3fae9ca1b9d1"],
Cell[13423, 316, 191, 3, 34, "Text",ExpressionUUID->"c59ed43a-abd3-4d92-b810-3ecd16e6ebb4"],
Cell[CellGroupData[{
Cell[13639, 323, 1599, 34, 210, "Input",ExpressionUUID->"6e38e186-bfa8-4b42-9e23-0972e9bad5c6"],
Cell[15241, 359, 448, 7, 41, "Output",ExpressionUUID->"d3f020ff-b384-4aeb-91c0-8aa012d2a837"]
}, Open  ]],
Cell[15704, 369, 261, 5, 41, "Input",ExpressionUUID->"00af1c2e-1f9e-442c-8429-984ceb64d6a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16002, 379, 176, 3, 34, "Subsection",ExpressionUUID->"7e6943d2-09a0-45b1-8898-90a498c49483"],
Cell[16181, 384, 7830, 167, 675, "Code",ExpressionUUID->"06150ce4-6bac-48e1-ab4d-6f94a2741c61"],
Cell[CellGroupData[{
Cell[24036, 555, 974, 15, 41, "Input",ExpressionUUID->"1544a336-5163-4be2-ba1e-60ecb4478e2e"],
Cell[25013, 572, 947, 14, 41, "Output",ExpressionUUID->"3dcd46d6-8b26-4da4-8a33-c2b95a99a7d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25997, 591, 300, 6, 41, "Input",ExpressionUUID->"796dfc95-468a-42f5-b4c0-8e6d1a751de0"],
Cell[26300, 599, 296, 4, 41, "Output",ExpressionUUID->"6d5254bf-c905-4d52-a134-2d0fdae45447"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26633, 608, 205, 3, 41, "Input",ExpressionUUID->"06c8a61f-1653-4270-b1d6-6c5a6c1c230d"],
Cell[26841, 613, 176, 2, 41, "Output",ExpressionUUID->"2a9c4f64-4781-4c77-b962-94564c93f8be"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27066, 621, 178, 3, 34, "Subsection",ExpressionUUID->"2096c1a0-f880-4564-92ab-5cbb946dbabd"],
Cell[27247, 626, 7354, 155, 561, "Code",ExpressionUUID->"81b3e613-0185-45a7-9e39-7dcc60c32881"],
Cell[CellGroupData[{
Cell[34626, 785, 756, 12, 41, "Input",ExpressionUUID->"798b76db-18e6-4e98-8408-734bc935e713"],
Cell[35385, 799, 668, 10, 75, "Output",ExpressionUUID->"e5a366d3-3d76-4f5f-b0d0-621d07cd3e57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36090, 814, 259, 5, 41, "Input",ExpressionUUID->"665a0b5f-fdf0-40bf-b7e3-e83a4481d6ae"],
Cell[36352, 821, 229, 4, 41, "Output",ExpressionUUID->"8d1ef60e-26a6-4d62-85bf-bfc2f32c82d9"]
}, Open  ]],
Cell[36596, 828, 205, 3, 41, "Input",ExpressionUUID->"53fc5f03-9dec-4edb-a1e1-346946bcc9bd"],
Cell[36804, 833, 191, 3, 34, "Text",ExpressionUUID->"a9f223db-c44f-48da-a3ba-6fbaa20ed913"],
Cell[CellGroupData[{
Cell[37020, 840, 1656, 36, 210, "Input",ExpressionUUID->"e44997dc-849e-44e1-838f-29b66c4ac62e"],
Cell[38679, 878, 303, 5, 41, "Output",ExpressionUUID->"c1f5f9da-33e4-4fc1-bfa6-944b5614cfed"]
}, Open  ]],
Cell[38997, 886, 257, 4, 41, "Input",ExpressionUUID->"52275b5f-f634-41af-80aa-da7bb14afdb2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

